services:
  postgres:
    build: .
    container_name: pg_container
    ports:
      - "5433:5432"
    env_file:
      - postgres.env
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - app_network

  backend:
    image: my-backend-app
    build:
      context: ./backend
    depends_on:
      - postgres
    env_file:
      - backend.env
    ports:
      - "8080:8080"
    networks:
      app_network:
        aliases:
          - backend-service
  
  pinger:
    image: my-pinger-app
    build:
      context: ./pinger
    env_file:
      - pinger.env
    depends_on:
      backend:
        condition: service_started
    networks:
      - app_network
      - hello_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  HelloWorld:
    image: alpine:latest
    container_name: hello_world
    build: ./HelloWorld
    networks:
      - hello_network
    tty: true
    ports:
      - "9999:9999"

  frontend:
    build: ./frontend/front
    container_name: frontend-container
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:8080
    ports:
      - "3000:3000"
    networks:
      - app_network

volumes:
  pg_data:

networks:
  app_network:
    name: app_network
    driver: bridge
    attachable: true
  hello_network:
    name: hello_network
    driver: bridge
    attachable: true